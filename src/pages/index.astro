---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import type { Article } from "../../interfaces";

const response = await fetch(import.meta.env.PUBLIC_API_URL + "articles");
const data = await response.json();
const articles: Article[] = data.data;
---

<Layout title="Astro Test">
  <main>
    <ul role="list" class="link-card-grid">
      {articles.map((article) => <Card article={article} />)}
    </ul>
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem;
    width: 100%;
    max-width: 800px; /* Adjusted max-width */
    color: white;
    font-size: 20px;
    line-height: 1.6;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(
      auto-fit,
      minmax(250px, 1fr)
    ); /* Adjusted grid-template-columns */
    gap: 2rem;
    padding: 0;
    justify-content: center; /* Center align grid items */
  }

  /* Media query for smaller screens */
  @media screen and (max-width: 600px) {
    .link-card-grid {
      grid-template-columns: repeat(
        1,
        1fr
      ); /* Display one card per row on smaller screens */
    }
  }

  /* Media query for medium-sized screens */
  @media screen and (min-width: 601px) and (max-width: 900px) {
    .link-card-grid {
      grid-template-columns: repeat(
        2,
        1fr
      ); /* Display two cards per row on medium-sized screens */
    }
  }

  /* Media query for larger screens */
  @media screen and (min-width: 901px) {
    .link-card-grid {
      grid-template-columns: repeat(
        3,
        1fr
      ); /* Display three cards per row on larger screens */
    }
  }
</style>
