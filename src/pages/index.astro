---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';

interface Article{
	_id: string,
	title: string,
    text: string,
    rating: number,
    date: Date,
    image: string
    genre: string
    release_date: Date,
    author: string,
    approved: boolean
}
const response = await fetch(import.meta.env.PUBLIC_API_URL+"articles");
const data = await response.json();
const articles: Article[] = data.data;
---

<Layout title="Astro Test">
	<main>
		<ul role="list" class="link-card-grid">
			{articles.map((article)=>
				<Card _id={article._id} title={article.title} body={article.text} rating={article.rating} release_date={article.release_date} genre={article.genre} image={article.image} />
			)}
		</ul>
	</main>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
    	display: flex;
    	justify-content: center;
    	align-items: center;
	}
	.astro-a {
		position: absolute;
		top: -32px;
		left: 50%;
		transform: translatex(-50%);
		width: 220px;
		height: auto;
		z-index: -1;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 1em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(rgba(var(--accent-dark), 66%), rgba(var(--accent-dark), 33%));
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(3, 1fr);
		gap: 2rem;
		padding: 0;
	}
</style>
