---
import { Image } from "astro:assets";
import Back from "../../components/Back.astro";
import Comment from "../../components/Comment.astro";
import Layout from "../../layouts/Layout.astro";
import type { Article, Comment as CommentType } from "../../../interfaces";

export const prerender = false;
const { id } = Astro.params;

const articleData = await fetch(
  import.meta.env.PUBLIC_API_URL + "article/" + id,
).then((r) => r.json());
const article: Article = articleData.data;
const release = new Date(article.release_date);

const commentsData = await fetch(
  import.meta.env.PUBLIC_API_URL + "comments/" + id,
).then((r) => r.json());
const comments: CommentType[] = commentsData.data;
---

<Layout title={article.title}>
  <Back link="/feed" pageTitle="feed" />
  <main>
    <article class="article-header">
      <Image
        class="article-image"
        src={article.image}
        alt={`Image for ${article.title}`}
        width={800}
        height={400}
      />
      <h1>{article.title}</h1>
      <p>Rating: {article.rating} / 5</p>
      <p>Release Date: {release.toLocaleDateString()}</p>
      <p>Genre: {article.genre}</p>
    </article>
    <section class="article-body">
      <p>{article.text}</p>
      <p>Review Written By: {article.author}</p>
    </section>
    <section class="article-comments">
      <h2>Comments</h2>
      <ul role="list" class="article-comment-grid">
        {
          comments.length > 0 ? (
            comments.map((comment: CommentType) => (
              <Comment comment={comment} />
            ))
          ) : (
            <li>No comments yet</li>
          )
        }
      </ul>
    </section>
  </main>
</Layout>

<style>
  @keyframes scaleIn {
    from {
      transform: scale(0.8);
      opacity: 0.2;
    }
    to {
      transform: scale(1);
      opacity: 1;
    }
  }
  main {
    margin: auto;
    padding: 1rem;
    max-width: 800px;
    color: white;
    font-size: 1rem;
    line-height: 1.5;
    white-space: pre-line;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
  .article-header {
    text-align: center;
    margin-bottom: 2rem;
  }
  .article-image {
    width: 100%;
    height: auto;
    animation: scaleIn 2s ease-in-out;
  }
  .article-header h1 {
    font-family: "Jersey 10", sans-serif;
    font-weight: 400;
    font-style: normal;
    font-size: 2.5rem;
    margin: 0.5rem 0;
  }
  .article-header p {
    font-size: 0.9rem;
    margin: 0.3rem 0;
  }
  .article-body {
    border: 1px solid #ccc;
    padding: 1rem;
    width: 100%;
  }
  .article-comments {
    width: 100%;
    margin-top: 2rem;
    align-self: flex-start;
  }
  .article-comments h2 {
    margin-bottom: 1rem;
    text-align: center;
  }
  .article-comment-grid {
    width: calc(100% - 2rem);
    padding: 1rem;
    display: flex;
    flex-direction: column;
    border: 1px solid #ccc;
    list-style-type: none;
  }
  @media (max-width: 768px) {
    main {
      padding: 0.5rem;
    }
    .article-header h1 {
      font-size: 1.8rem;
    }
    .article-body {
      font-size: 0.9rem;
      padding: 0.8rem;
    }
    .article-comments h2 {
      font-size: 1.5rem;
    }
  }
  @media (max-width: 480px) {
    .article-header h1 {
      font-size: 1.5rem;
    }
    .article-body {
      font-size: 0.8rem;
      padding: 0.5rem;
    }
    .article-comments h2 {
      font-size: 1.2rem;
    }
  }
</style>
